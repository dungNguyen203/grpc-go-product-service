syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";
import "rpc_get_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/dungNguyen203/grpc-go-product-service/proto/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Tinybank API";
    version: "1.2";
    contact: {
      name: "NVD";
      url: "https://github.com/dungNguyen203";
      email: "dungnguyennvd11@gmail.com";
    };
  };
};

service TinyBank{
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    };
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update user";
            summary: "Update user";
        };
    };
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token";
            summary: "Login user";
        };
    };
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse){
        option (google.api.http) = {
            get: "/v1/verify-email"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to verify user's email address";
            summary: "Verify email";
        };
    };

    rpc GetUser (GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get: "/v1/users"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get user";
            summary: "Get user";
        };
    };
}
